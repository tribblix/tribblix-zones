#!/bin/sh
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2024 Peter Tribble
#

#
# unpack a zfs send stream into a zone root directory
#
# usage: -d destination tarball
#

usage() {
	echo "Usage: $0 -d destination file"
	exit 2
}

bail() {
    echo "ERROR: $1"
    exit 1
}

case $1 in
-d)
	shift
	DESTDIR=$1
	shift
	;;
*)
	usage
	;;
esac

case $# in
1)
	ISOFILE=$1
	;;
*)
	usage
	;;
esac

if [ -z "$DESTDIR" ]; then
   usage
fi
if [ -z "$ISOFILE" ]; then
   usage
fi

#
# check files exist
#
if [ ! -r "$ISOFILE" ]; then
   bail "missing input file"
fi
case $DESTDIR in
/*)
if [ ! -d "$DESTDIR" ]; then
   bail "destination does not exist"
fi
;;
*)
bail "destination must be an absolute path"
;;
esac

#
# the destination must exist, and it must be empty
#
NF=$(/bin/ls -1A "$DESTDIR")
if [ -n "$NF" ]; then
   bail "destination must be empty"
fi

#
# the destination must be a zfs dataset, because we're going to send a
# zfs stream at it
#
MYDSET=$(/usr/sbin/zfs list -H "$DESTDIR" 2>/dev/null | awk '{print $1}')
if [ -z "$MYDSET" ]; then
    bail "zone root must be a zfs dataset"
fi
#
# and it must be its own dataset mounted at the zone root
# we can't look at the zfs mountpoint because that will be "legacy"
# so we end up parsing df and verifying that the location is in fact
# a mount point
#
MYDSET2=$(/usr/bin/df -k "$DESTDIR" | grep / | awk '{print $1}')
MYDSETMP=$(/usr/bin/df -k "$DESTDIR" | grep / | awk '{print $NF}')
if [ "$MYDSET" != "$MYDSET2" ]; then
    bail "zfs dataset mismatch"
fi
if [ "$MYDSETMP" != "$DESTDIR" ]; then
    bail "zone root must be a separate zfs dataset"
fi

GZCAT="/usr/bin/gzcat"
BZCAT="/usr/bin/bzcat"
XZCAT="/usr/bin/xz"
if [ -x /usr/bin/pbzcat ]; then
    BZCAT="/usr/bin/pbzcat"
fi
#
# OK, we're good to go
# need -F to send into an existing dataset
#
case $ISOFILE in
    *.zfs)
	cat "$ISOFILE" | /usr/sbin/zfs recv -F "$MYDSET"
	;;
    *.zfs.gz)
	${GZCAT} "$ISOFILE" | /usr/sbin/zfs recv -F "$MYDSET"
	;;
    *.zfs.bz2)
	${BZCAT} "$ISOFILE" | /usr/sbin/zfs recv -F "$MYDSET"
	;;
    *.zfs.xz)
	${XZCAT} -d -c "$ISOFILE" | /usr/sbin/zfs recv -F "$MYDSET"
	;;
    *)
	bail "Unrecognized file format $ISOFILE"
	;;
esac
